{
  "hash": "b7f6f0d404cf422a2d0815d1325b98fe",
  "result": {
    "markdown": "---\ntitle: \"Gentle introduction to `R`\"\ntitle-slide-attributes:\n  data-background-image: stan_state_screen_5.png\n  #data-background-size: contain\n  data-background-opacity: \"0.3\"\nauthor: \"Esteban Montenegro-Montenegro, PhD\"\ninstitute: \"Department of Psychology and Child Development\"\nformat: \n  revealjs: \n    footer: \"[**Visit my website**](https://blackhill86.github.io/mm2/)\"\n    theme: [moon, customTheme.sass]\n    header-logo: warrior_head2.png\n    slide-number: true\n    self-contained: false\n    preview-links: true\n    chalkboard: \n      theme: whiteboard\nfilters: \n  - reveal-header      \nhighlight-style: dracula\ncode-block-bg: true\ncode-block-border-left: \"#A41728\"\nfrom: markdown+emoji\neditor: visual\nlogo: stan-state-logo_nickname-full-color.png\n---\n\n\n## What is [R]{.blue}?\n\n`R` is a programming language mostly used in statistics. It was created by statisticians.\n\nR was inspired by the statistical language `S` developed by At&T. `S` stands for \"statistics\" and it was written based on `C` language. After `S` was sold to a small company, `S`-plus was created with a graphical interface.\n\n## What is [R]{.blue} (II)?\n\n-   `R` was considered a \"statistics\" language, but nowadays it can perform more tasks. We will see examples where you can create a website, create a dashboard, create a teaching notebook, and presentation slides!\n\n-   `R` also provides multiple options to create graphics and plots. The options are infinite when you use a programming language.\n\n## Why should we use `R`? {.smaller .scrollable background-opacity=\"0.5\"}\n\n::: r-stack\n![](rgrowth.png){.fragment width=\"600\" height=\"400\"}\n\n![](rarea.png){.fragment width=\"444\" height=\"444\"}\n\n![](rtiobe.png){.fragment width=\"444\" height=\"444\"}\n:::\n\n## Why should we use `R`? {.smaller .scrollable background-opacity=\"0.5\"}\n\n[![TIOBE index of R overtime](rtiobe2.png)](https://www.tiobe.com/tiobe-index/r/)\n\n## Why should we use `R`? {.smaller .scrollable background-opacity=\"0.5\"}\n\n::: columns\n::: {.column width=\"70%\"}\n::: fragment\n-   `R` is free and open-source software. `R` is available as Free Software under the terms of the Free Software Foundation's GNU General Public License.\n:::\n\n::: {.fragment .fade-up}\n-   The amount of users grow every second.\n:::\n\n::: {.fragment .fade-up}\n-   It is friendly with non-programmers (You don't believe me I know...).\n:::\n\n::: {.fragment .fade-up}\n-   The amount of packages is growing (19985 packages as today).\n:::\n\n::: {.fragment .fade-up}\n-   You don't depend on buying a license.\n:::\n\n::: {.fragment .fade-up}\n-   You can see what is under the hood.\n:::\n\n::: {.fragment .fade-up}\n-   There are many jobs where `R` skills are needed.\n:::\n:::\n\n::: {.column width=\"30%\"}\n![](tea_2.jpg)\n\n::: {.fragment .fade-up}\n-   You'll have access to cutting-edge quantitative methods and models.\n:::\n\n::: {.callout-important title=\"More info\" appearance=\"simple\" collapse=\"true\"}\nSee [datacamp.com](https://www.datacamp.com/blog/top-programming-languages-for-data-scientists-in-2022){target=\"_blank\"} opinion.\n:::\n:::\n:::\n\n# How `R` works? {.center .sectionhead}\n\n## \n\n-   `R` is an interpreted language, that means you don't need to compile the code. You will need to use a command-line interpreter.\n\n-   It is an [object-oriented](https://en.wikipedia.org/wiki/Object-oriented_programming){target=\"_blank\"} programming language. It represents the information using virtual objects.\n\n![](fancy.jpg){fig-align=\"right\" width=\"300\"}\n\n## Packages are the key {.smaller .scrollable background-opacity=\"0.5\"}\n\n-   `R` has several built-in functions but they are not enough to answer all the possible research questions a researcher will have.\n\n-   `R` users support their data analysis using [packages]{.blue} that other members of the community developed.\n\n-   These packages are actually software and they can be installed very easily in `R`. You don't have to program anything, there are 19 985 packages as today. But of course, you might need to program some routines if your problem is very specific.\n\n-   The packages are all located in a large repository call [Comprehensive R Archive Network (CRAN)](https://cran.r-project.org/web/packages/available_packages_by_name.html){target=\"_blank\"}\n\n# Let's jump into `R` {.center .sectionhead}\n\n## Editors and IDE {.smaller .scrollable background-opacity=\"0.5\"}\n\n-   Most famous IDE (Integrated Development Environment):\n    -   [RStudio](https://posit.co/download/rstudio-desktop/){target=\"_blank\"}\n    -   [Visual Studio Code](https://code.visualstudio.com/download)\n-   Not so famous but still powerful and [full open source:]{.blue}\n    -   [EMACS](https://www.gnu.org/software/emacs/download.html){target=\"_blank\"}\n    -   [VIM](https://www.vim.org/download.php){target=\"_blank\"}\n\n# Everything is an object, everything is a function {.center .sectionhead}\n\n## Types of objects {.smaller .scrollable background-opacity=\"0.5\"}\n\n-   Objects in `R` have properties and names, similar to real objects:\n    -   vectors\n    -   data frame\n    -   lists\n    -   arrays\n    -   functions\n-   These are just the most common objects in `R`. I'll explain a little bit of each one.\n\n## Vectors {.smaller .scrollable background-opacity=\"0.5\"}\n\n-   It is the most basic object, it is the bones of `R`.\n\n-   In human language, they look like lists of elements. But, when mixed different type of data (letters mixed with numbers) things get messy:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Let's create a vector with names:\n\nrandomNames <- c(\"Randall\", \"Pablo\", \"Emma\")\n\nprint(randomNames) #You don't need to type print. This is for teaching purposes. \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Randall\" \"Pablo\"   \"Emma\"   \n```\n:::\n:::\n\n\nLet's see what happen's when I mix numbers and letters:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumbersNames <- c(\"one\",1, 2, \"two\", 3, \"three\")\nprint(numbersNames)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"one\"   \"1\"     \"2\"     \"two\"   \"3\"     \"three\"\n```\n:::\n:::\n\n\n`R` coerces everything to be a string or character vector.\n\n-   You may also subset a vector by using `[]` as an index indicator\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumbersNames[4]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"two\"\n```\n:::\n:::\n\n\n## Data frames {.smaller .scrollable background-opacity=\"0.5\"}\n\n-   Data frame is the most useful type of object when you conduct data analysis.\n\n-   A data frame is several lists combined together, and it looks pretty much like a matrix or a spreadsheet:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmtcars\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nDuster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nToyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\n```\n:::\n:::\n\n\n##  {.smaller .scrollable background-opacity=\"0.5\"}\n\nLet's beautify the data frame output:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlibrary(DT)\ndatatable(mtcars,\n          rownames = TRUE) \n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-291e5c417aaeba03656b\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-291e5c417aaeba03656b\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"Mazda RX4\",\"Mazda RX4 Wag\",\"Datsun 710\",\"Hornet 4 Drive\",\"Hornet Sportabout\",\"Valiant\",\"Duster 360\",\"Merc 240D\",\"Merc 230\",\"Merc 280\",\"Merc 280C\",\"Merc 450SE\",\"Merc 450SL\",\"Merc 450SLC\",\"Cadillac Fleetwood\",\"Lincoln Continental\",\"Chrysler Imperial\",\"Fiat 128\",\"Honda Civic\",\"Toyota Corolla\",\"Toyota Corona\",\"Dodge Challenger\",\"AMC Javelin\",\"Camaro Z28\",\"Pontiac Firebird\",\"Fiat X1-9\",\"Porsche 914-2\",\"Lotus Europa\",\"Ford Pantera L\",\"Ferrari Dino\",\"Maserati Bora\",\"Volvo 142E\"],[21,21,22.8,21.4,18.7,18.1,14.3,24.4,22.8,19.2,17.8,16.4,17.3,15.2,10.4,10.4,14.7,32.4,30.4,33.9,21.5,15.5,15.2,13.3,19.2,27.3,26,30.4,15.8,19.7,15,21.4],[6,6,4,6,8,6,8,4,4,6,6,8,8,8,8,8,8,4,4,4,4,8,8,8,8,4,4,4,8,6,8,4],[160,160,108,258,360,225,360,146.7,140.8,167.6,167.6,275.8,275.8,275.8,472,460,440,78.7,75.7,71.1,120.1,318,304,350,400,79,120.3,95.1,351,145,301,121],[110,110,93,110,175,105,245,62,95,123,123,180,180,180,205,215,230,66,52,65,97,150,150,245,175,66,91,113,264,175,335,109],[3.9,3.9,3.85,3.08,3.15,2.76,3.21,3.69,3.92,3.92,3.92,3.07,3.07,3.07,2.93,3,3.23,4.08,4.93,4.22,3.7,2.76,3.15,3.73,3.08,4.08,4.43,3.77,4.22,3.62,3.54,4.11],[2.62,2.875,2.32,3.215,3.44,3.46,3.57,3.19,3.15,3.44,3.44,4.07,3.73,3.78,5.25,5.424,5.345,2.2,1.615,1.835,2.465,3.52,3.435,3.84,3.845,1.935,2.14,1.513,3.17,2.77,3.57,2.78],[16.46,17.02,18.61,19.44,17.02,20.22,15.84,20,22.9,18.3,18.9,17.4,17.6,18,17.98,17.82,17.42,19.47,18.52,19.9,20.01,16.87,17.3,15.41,17.05,18.9,16.7,16.9,14.5,15.5,14.6,18.6],[0,0,1,1,0,1,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,0,1,0,0,0,1],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1],[4,4,4,3,3,3,3,4,4,4,4,3,3,3,3,3,3,4,4,4,3,3,3,3,3,4,5,5,5,5,5,4],[4,4,1,1,2,1,4,2,2,4,4,3,3,3,4,4,4,1,2,1,1,2,2,4,2,1,2,2,4,6,8,2]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>mpg<\\/th>\\n      <th>cyl<\\/th>\\n      <th>disp<\\/th>\\n      <th>hp<\\/th>\\n      <th>drat<\\/th>\\n      <th>wt<\\/th>\\n      <th>qsec<\\/th>\\n      <th>vs<\\/th>\\n      <th>am<\\/th>\\n      <th>gear<\\/th>\\n      <th>carb<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6,7,8,9,10,11]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## Lists {.smaller .scrollable background-opacity=\"0.5\"}\n\n-   Lists are flexible and easy to manipulate in `R`. You can combine different types of objects in a single list:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n### Let's create different types of objects\n\n### Data frame\n\ndata_1 <- data.frame(v1= rnorm(8),\n                     v2 = rnorm(8),\n                     v3 = rnorm(8))\n\n### Vector\n\nmoreNames <- c(\"Bob\", \"Paris\", \"Ana\")\n\n### Numeric vector\n\nnumericVector <- c(1,3,78,90)\n\n### We can group all these objects in a list\n\nlistOfObjects <- list(data_1,\n                      moreNames,\n                      numericVector)\nprint(listOfObjects)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n          v1          v2          v3\n1  0.7025355 -0.34721307  0.54523251\n2 -0.3838901  1.45164772  2.14718711\n3  0.5640822 -0.61093996  0.07249388\n4 -0.0370612  0.66197341 -1.61680834\n5 -0.6385007  1.37078188  1.82329788\n6 -0.7682162  0.01554768 -0.84781184\n7 -2.1968642 -1.20485417  0.11511751\n8  0.4451945 -1.05161465 -1.94466894\n\n[[2]]\n[1] \"Bob\"   \"Paris\" \"Ana\"  \n\n[[3]]\n[1]  1  3 78 90\n```\n:::\n:::\n\n\nIf you need to access one object in the list you may use its location plus `[[]]`:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlistOfObjects[[2]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Bob\"   \"Paris\" \"Ana\"  \n```\n:::\n:::\n\n\n## Arrays {.smaller .scrollable background-opacity=\"0.5\"}\n\n-   I don't use arrays in my code, but they are common in in `R` and other languages.\n\n-   An arrays is a multidimensional object, you can have multiple \"slices\" of information in on single object.\n\n-   It is similar to a multi-layer object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\narray(c(matrix(1:4,2,2)), dim=c(2,2,3))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n, , 1\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\n, , 2\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\n, , 3\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n```\n:::\n:::\n\n\n## Functions {.smaller .scrollable background-opacity=\"0.5\"}\n\n-   A function is a data object that requires input information, in return; it will give an output.\n\n-   I have already used several functions (e.g. `data.frame()`, `rnorm()`).\n\n-   Functions will always follow the following structure:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyFunction <- function(argument1, argument2, ...){ \n  \n  operation\n  \n  return()\n  \n  }\n```\n:::\n\n\n-   We can study the following case, where I created a function to estimate your age:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nestimateAge <- function(myBirthday) {\n  ### Function to check if year is a\n  ### leap year.\n  \n  leapyear <- function(year) {\n    return(((year %% 4 == 0) & (year %% 100 != 0)) | (year %% 400 == 0))\n  }\n  \n  ### Information necessary to compute age\n  myBirthday2 <- as.Date(myBirthday)\n  today <- Sys.Date()\n  year <- as.numeric(format(myBirthday2, \"%Y\"))\n  leapCheck <- leapyear(year)\n  \n  \n  if (leapCheck == TRUE) {\n    ## leap year\n    age <- difftime(today,\n                    myBirthday2 ,\n                    units = \"days\") / (365 + 1)\n    \n  } else {\n    ## No leap year\n    age <- difftime(today,\n                    myBirthday2,\n                    units = \"days\") / 365\n    \n  }\n  \n  message(\"Your age is\",\" \", age)\n}\n```\n:::\n\n\n-   My function `estimateAge()` requires only one argument `myBirthday`, that argument is passed to the computation inside the function to estimate the age.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Let's enter my date of birth\nestimateAge(\"1986-01-28\") \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nYour age is 37.8082191780822\n```\n:::\n:::\n\n\n-   But don't worry, you don't have to compute age like I did. There is already a package that has all the tools to manipulate dates. It is the package `lubridate`.\n\n# More applications beyond statistics {.center .sectionhead}\n\n## ShinyApps {.smaller .scrollable background-opacity=\"0.5\"}\n\n-   [Watch Crime](https://shiny.posit.co/r/gallery/government-public-sector/crime-watch/){target=\"_blank\"}\n\n-   [Water quality dashboard](https://shiny.posit.co/r/gallery/government-public-sector/lake-profile-dashboard/){target=\"_blank\"}\n\n-   [Interactive data visualization](https://shiny.posit.co/r/gallery/interactive-visualizations/movie-explorer/){target=\"_blank\"}\n\n-   [Super Zips](https://shiny.posit.co/r/gallery/interactive-visualizations/superzip-example/){target=\"_blank\"}\n\n## Web Pages {.smaller .scrollable background-opacity=\"0.5\"}\n\n[- Andrew Heiss](https://www.andrewheiss.com/){target=\"_blank\"}\n\n[- Quantum Jitter](https://www.quantumjitter.com/project/){target=\"_blank\"}\n\n[- Ella Kaye](https://ellakaye.co.uk/){target=\"_blank\"}\n\n[- Books](https://r-pkgs.org/){target=\"_blank\"}\n\n[- University Course](https://lse-dsi.github.io/DS101/){target=\"_blank\"}\n\n## Scientific articles and reports in pdf {.smaller .scrollable background-opacity=\"0.5\"}\n\n[- Article](https://cmarquardt.github.io/quarto-simple-article/){target=\"_blank\"}\n\n[- Report](https://github.com/numbats/monash-quarto-report/blob/main/examples/template.pdf){target=\"_blank\"}\n\n## We can also add `R` code and run it in our websites\n\n<iframe src=\"https://blackhill86.github.io/mm2/practice2/practice2.html#practice2\" width=\"75%\" height=\"75%\" frameborder=\"0\" scrolling=\"yes\">\n\n</iframe>\n\n# We can paint happy plots in `R` {.center .sectionhead}\n\n![](bobross.jpg){fig-align=\"center\" width=\"350\"}\n\n## Happy penguins {.smaller .scrollable background-opacity=\"0.5\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n### The rule is to write the packages required by your code at the beginning\n## Packages loaded or called\nlibrary(jpeg)             ## reads pictures into R\nlibrary(patchwork)         ## more tools to add features in a plot\nlibrary(ggplot2)          ## creates plots\nlibrary(palmerpenguins)  ## This package has the penguin data\n\npicture <- \"penguins.jpg\"\nimg <- readJPEG(picture, native = TRUE)\n\n### Plotting the data using ggplot2\n\nggplot(penguins, aes(x = flipper_length_mm, \n                     y= body_mass_g,\n                     color = species)) +\n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\" ) + \n  theme_classic() +  \n  xlab(\"Flipper Length in milimeters\")+\n  ylab(\"Body Mass in grams\")+\n  inset_element(p = img,\n                left = 0.05,\n                bottom = 0.65,\n                right = 0.5,\n                top = 0.95)\n```\n\n::: {.cell-output-display}\n![](gentleR_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n## You can create art {.smaller .scrollable background-opacity=\"0.5\"}\n\n::: columns\n::: {.column width=\"40%\"}\n[Danielle Navarro's blog](https://blog.djnavarro.net/posts/2023-03-31_generative-art-with-grid/){target=\"_blank\"}\n:::\n\n::: {.column width=\"60%\"}\n[Basics on generative art](https://blog.djnavarro.net/posts/2021-10-19_rtistry-posts/){target=\"_blank\"}\n:::\n:::\n\n![](flametree.png){fig-align=\"center\"}\n\n\n```{=html}\n<!--# Add model summary: https://modelsummary.com/. Also add  https://blog.djnavarro.net/posts/2023-03-31_generative-art-with-grid/\nAnd generative art\nAdd anput packages and CRAN\n-->\n```\n\n## GIS and spatial data {.smaller .scrollable background-opacity=\"0.5\"}\n\n![](https://www.andrewheiss.com/blog/2023/04/26/middle-earth-mapping-sf-r-gis/index_files/figure-html/numenor-map-correct-1.png){.absolute top=\"200\" left=\"10f\" width=\"500\" height=\"500\"}\n\n![](ring2.jpg){.absolute top=\"200\" right=\"0\" width=\"200\" height=\"200\"}\n\n[Making Middle Earth maps with R](https://www.andrewheiss.com/blog/2023/04/26/middle-earth-mapping-sf-r-gis/){target=\"_blank\"}\n\n# Remember...\n\n[![](programmers-credo.jpg)](https://www.globalnerdy.com/2021/06/07/the-programmers-credo/)\n\n# Thank you for you attention! {.center .sectionhead}\n\n[[{{< fa brands mastodon >}}](https://fediscience.org/@montenegro)]{.blue} Follow me on Mastodon.\n\n{{< fa solid envelope beat >}} <a href=\"mailto:emontenegro1@csustan.edu\">emontenegro1\\@csustan.edu</a>\n",
    "supporting": [
      "gentleR_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.27/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.12.1/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.12.1/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.12.1/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}